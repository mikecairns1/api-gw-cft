AWSTemplateFormatVersion: '2010-09-09'

Resources:
  MyAPIGateway:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name: !Sub 'MyAPIGateway-${AWS::Region}'
      Description: My API Gateway
      BinaryMediaTypes:
        - 'application/octet-stream'
      MinimumCompressionSize: 0

  MyAPIResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: !Ref MyAPIGateway
      ParentId: !GetAtt MyAPIGateway.RootResourceId
      PathPart: 'myresource'

  MyAPIMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref MyAPIGateway
      ResourceId: !Ref MyAPIResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 
          - 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations'
          - LambdaArn: !GetAtt MyLambdaFunction.Arn

  MyAPIDeployment:
    Type: 'AWS::ApiGateway::Deployment'
    DependsOn: MyAPIMethod
    Properties:
      RestApiId: !Ref MyAPIGateway
      Description: 'My API Deployment'

  MyAPIStage:
    Type: 'AWS::ApiGateway::Stage'
    Properties:
      RestApiId: !Ref MyAPIGateway
      StageName: 'prod'
      DeploymentId: !Ref MyAPIDeployment

  MyLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: !Sub 'MyHelloWorldFunction-${AWS::Region}'
      Handler: 'index.handler'
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          exports.handler = async (event) => {
            return {
              statusCode: 200,
              body: JSON.stringify('Hello from Lambda!'),
            };
          };
      Runtime: 'nodejs14.x'

  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'

  LambdaApiGatewayInvoke:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: !Ref MyLambdaFunction
      Action: 'lambda:InvokeFunction'
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${MyAPIGateway}/*/GET/myresource'

Outputs:
  ApiGatewayURL:
    Value: !Sub 'https://${MyAPIGateway}.execute-api.${AWS::Region}.amazonaws.com/prod/myresource'
    Description: The URL of the API Gateway